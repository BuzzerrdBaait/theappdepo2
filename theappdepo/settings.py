"""
Django settings for theappdepo project.

Generated by 'django-admin startproject' using Django 5.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url
import django_heroku
import psycopg2

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'profiles',
 #   'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'theappdepo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates','profiles')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'theappdepo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
is_deployed=os.getenv("is_deployed")
if is_deployed:

        django_heroku.settings(locals(), staticfiles=False)
            
        AWS_ACCESS_KEY_ID = os.environ.get('AWS_ACCESS_KEY_ID')            #
        AWS_SECRET_ACCESS_KEY =os.environ.get('AWS_SECRET_ACCESS_KEY')     #
        AWS_STORAGE_BUCKET_NAME =os.environ.get('S3_BUCKET')               #        DJANGO_STATIC = True                                               #
        DJANGO_STATIC_FILE_PROXY = 'cloudfront.file_proxy'                 #
        CLOUDFRONT_PUB_KEY=os.getenv('CLOUDFRONT_PUB')
        CLOUDFRONT_SECRET=os.getenv('CLOUDFRONT_SECRET')
        AWS_DEFAULT_ACL='public-read'                                #
        CLOUDFRONT_URL = 'https://d17usxoyp786nd.cloudfront.net/' 
        MEDIA_URL = CLOUDFRONT_URL
        AWS_S3_CUSTOM_DOMAIN = CLOUDFRONT_URL   
        DJANGO_STATIC = True
        DJANGO_STATIC_FILE_PROXY = 'cloudfront.file_proxy'
        #COMPRESS_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
        COMPRESS_ENABLED= True
        COMPRESS_URL= CLOUDFRONT_URL
        #'storages.backends.s3boto3.S3Boto3Storage'


        bucketurl='https://iloverecipes.s3.us-east-2.amazonaws.com'

        DATABASES = {
            "default": dj_database_url.config(conn_max_age=600, default="sqlite:///" + os.path.join(BASE_DIR, "db.sqlite3"))
        }
        
                
        DATABASE_URL = os.environ['DATABASE_URL']

        conn = psycopg2.connect(DATABASE_URL, sslmode='require')
    #    DATABASES['default'] = dj_database_url.config(conn_max_age=600, ssl_require=True)

        SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
        SECURE_SSL_REDIRECT = True

        STATIC_ROOT=os.path.join(BASE_DIR,'static')


else:
        
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


AUTH_USER_MODEL = 'profiles.User_Profile'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)
STATIC_ROOT=os.path.join(BASE_DIR,"/collectstatic/") 

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
